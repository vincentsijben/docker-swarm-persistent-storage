version: '2.4'

services:

  filebrowser:
    image: filebrowser/filebrowser:latest
    container_name: filebrowser
    ports:
      - 4000:4000
    volumes:
      - persistent_data:/srv
      # you need to hash password yourself, see:
      # https://github.com/filebrowser/filebrowser/issues/381#issuecomment-653241530
      # login with "username" and "password"
      - ./filebrowser.json:/.filebrowser.json
    # see this comment, to be able to use different port as port 80 you need to change healthcheck, see:
    # https://github.com/filebrowser/filebrowser/pull/1409#issuecomment-895283609
    healthcheck:
      test: curl -f http://localhost:4000/health || exit 1

  example:
    image: alpine
    container_name: example
    command: sleep 1d
    volumes:
      - persistent_data:/mnt

volumes:
  persistent_data:
    driver: s3fs
    driver_opts:
    # if you want to use this for a node application:
    # for correct permissions, node needs uid and gid 1000
    # maybe you want a subfolder, you should use name: "spacename/subfolder"
    # then you need to create the folder 'subfolder' Ã¡nd upload a random file through the Digital Ocean Spaces interface, else you'll get errors.
    # s3fsopts: "allow_other,uid=1000,gid=1000,url=https://ams3.digitaloceanspaces.com,use_path_request_style,nomultipart"

    # a mongodb container needs user 999 so you should use:
    # s3fsopts: "allow_other,uid=999,gid=999,url=https://ams3.digitaloceanspaces.com"
      s3fsopts: "url=https://ams3.digitaloceanspaces.com"
    name: "bm-db"
  # you could use a linode object storage bucket as well:
  # persistent_data_linode:
  #   driver: linode
  #   driver_opts:
  #     s3fsopts: "url=https://eu-central-1.linodeobjects.com"
  #   name: "bucketname"
