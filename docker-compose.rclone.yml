version: '2.4'
services:

  filebrowser:
    image: filebrowser/filebrowser:latest
    container_name: filebrowser
    ports:
      - 4000:4000
    volumes:
      - persistent_data:/srv
      # you need to hash password yourself, see:
      # https://github.com/filebrowser/filebrowser/issues/381#issuecomment-653241530
      # login with "username" and "password"
      - ./filebrowser.json:/.filebrowser.json
    # see this comment, to be able to use different port as port 80 you need to change healthcheck, see:
    # https://github.com/filebrowser/filebrowser/pull/1409#issuecomment-895283609
    healthcheck:
      test: curl -f http://localhost:4000/health || exit 1

  example:
    image: alpine
    container_name: example
    command: sleep 1d
    volumes:
      - persistent_data:/mnt

  example_subfolder:
    image: alpine
    container_name: example_subfolder
    command: sleep 1d
    volumes:
      - persistent_data_subfolder:/mnt

volumes:
  persistent_data:
    name: "persistent_data"
    driver: rclone
    driver_opts:
      # the remote is your rclone.conf name (the part between [ ] on top), followed by your digital ocean space name
      remote: "digitaloceanspaces:bm-db9"
  persistent_data_subfolder:
    name: "persistent_data_subfolder"
    driver: rclone
    driver_opts:
      # the remote is your rclone.conf name (the part between [ ] on top), followed by your digital ocean space name and optionally a subfolder
      remote: "digitaloceanspaces:bm-db9/subfolder"
      # you could allow other users eg. for a node application:
      # allow_other: 'true'
      # uid: 1000
      # gid: 1000
  

# can't get this to work:
# services:
#   mongo:
#     image: mongo
#     restart: always
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: root
#       MONGO_INITDB_ROOT_PASSWORD: example
#     volumes:
#       - persistent_data_mongo:/data/db
#     healthcheck:
#       test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
#       interval: 3s
# volumes:
#   persistent_data_mongo:
#     name: "persistent_data_mongo"
#     driver: rclone
#     driver_opts:
#       # the remote is your rclone.conf name (the part between [ ] on top), followed by your digital ocean space name and optionally a subfolder
#       remote: "digitaloceanspaces:bm-db9/mongo"
#       # we need to allow the mongo user to have permissions:
#       allow_other: 'true'
#       uid: 999
#       gid: 999
  